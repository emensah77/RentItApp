#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

last_commit_message=$(git log -1 --pretty=%B)

# Check if the last commit message includes "AUTOBUMP" to avoid infinite loop
if [[ "$last_commit_message" == *"AUTOBUMP: Bump version"* ]]; then
    echo "Skipping automated version bump to avoid infinite loop."
    exit 0
fi

LAST_VERSION=$(node -p -e "require('./package.json').version")
echo "Current version is: $LAST_VERSION"

# Extract and increment the version (major.minor.patch)
IFS='.' read -ra VERSION_PARTS <<< "$LAST_VERSION"
patch_version=$((VERSION_PARTS[2] + 1))
NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$patch_version"
echo "Incrementing version from $LAST_VERSION to $NEW_VERSION"

# Update package.json version
node -p -e "let pkg=require('./package.json'); pkg.version='$NEW_VERSION'; require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));" > /dev/null 2>&1

# Android: Increment versionCode and update versionName
android_versionCode_raw=$(grep 'versionCode' android/app/build.gradle | awk '{print $2}' | grep -Eo '^[0-9]+')

# Log the extracted value
echo "Extracted android_versionCode_raw: $android_versionCode_raw"

if [[ -z "$android_versionCode_raw" || ! $android_versionCode_raw =~ ^[0-9]+$ ]]; then
    echo "Error: Failed to extract a valid versionCode from android/app/build.gradle"
    exit 1
fi

new_versionCode=$((android_versionCode_raw + 1))
echo "Incrementing Android versionCode from $android_versionCode_raw to $new_versionCode"
sed -i '' -E "s/versionCode $android_versionCode_raw/versionCode $new_versionCode/" android/app/build.gradle

echo "Setting Android versionName to: $NEW_VERSION"
sed -i '' -E "s/versionName \".*\"/versionName \"$NEW_VERSION\"/" android/app/build.gradle

# iOS: Increment CFBundleVersion and update CFBundleShortVersionString
current_build=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" ios/AirbnbClone/Info.plist)
new_build_number=$(($current_build + 1))
echo "Incrementing iOS CFBundleVersion from $current_build to $new_build_number"
/usr/libexec/PlistBuddy -c "Set :CFBundleVersion $new_build_number" ios/AirbnbClone/Info.plist

echo "Setting iOS CFBundleShortVersionString to: $NEW_VERSION"
/usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $NEW_VERSION" ios/AirbnbClone/Info.plist

git add android/app/build.gradle ios/AirbnbClone/Info.plist ios/AirbnbCloneTests/Info.plist package.json
git commit -am "AUTOBUMP: Bump version. v$NEW_VERSION"
