name: Build Android & iOS

# Triggered when code is pushed to any branch in a repository
on: push

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        with:
          path: ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - uses: actions/cache@v2
        with:
          path: ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Inject environment variables
        run: |
          cat << EOF > .env
          REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}
          CODE_PUSH_DEPLOYMENT_KEY=${{ secrets.CODE_PUSH_DEPLOYMENT_KEY }}
          REACT_NATIVE_APP_ENV=${{ secrets.REACT_NATIVE_APP_ENV }}
          STREAM_CHAT_APP_KEY=${{ secrets.STREAM_CHAT_APP_KEY }}
          AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}
          GOOGLE_MAP_API_KEY=${{ secrets.GOOGLE_MAP_API_KEY }}
          EOF

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - run: pod install --repo-update
        working-directory: ios

      - name: Bundle App
        run: yarn bundle

      - run:
          xcodebuild clean archive -workspace testCiCdReactNative.xcworkspace -scheme
          testCiCdReactNative -archivePath testCiCdReactNative.xcarchive CODE_SIGNING_ALLOWED=NO |
          xcpretty
        working-directory: ios

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Gradle Cache https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Yarn Cache: https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Inject environment variables
        run: |
          cat << EOF > .env
          REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}
          CODE_PUSH_DEPLOYMENT_KEY=${{ secrets.CODE_PUSH_DEPLOYMENT_KEY }}
          REACT_NATIVE_APP_ENV=${{ secrets.REACT_NATIVE_APP_ENV }}
          STREAM_CHAT_APP_KEY=${{ secrets.STREAM_CHAT_APP_KEY }}
          AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}
          GOOGLE_MAP_API_KEY=${{ secrets.GOOGLE_MAP_API_KEY }}
          EOF

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Bundle App
        run: yarn bundle

      - name: Bundle & *.apk
        run: cd android && ./gradlew bundleRelease assembleRelease

      - name: Check existence
        run: ls android/app/build/outputs/apk/release

      - name: Upload Artifact (APK)
        uses: actions/upload-artifact@v3
        with:
          name: Apk
          path: android/app/build/outputs/apk/release/*.apk

      - name: Upload Artifact (AAB)
        uses: actions/upload-artifact@v3
        with:
          name: Aab
          path: android/app/build/outputs/bundle/release/*.aab
